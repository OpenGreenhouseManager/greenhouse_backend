[build]
target = ["x86_64-unknown-linux-gnu", "armv7-unknown-linux-gnueabihf"]

[target.armv7-unknown-linux-gnueabihf]
linker = "arm-linux-gnueabihf-gcc"
rustflags = [
  "-L/usr/lib/arm-linux-gnueabihf",
  "-L/usr/arm-linux-gnueabihf/lib",
]
# PKG_CONFIG_LIBDIR=/usr/lib/arm-linux-gnueabihf/pkgconfig
# PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig
# OPENSSL_LIB_DIR=/usr/lib/arm-linux-gnueabihf

[target.x86_64-unknown-linux-gnu]
linker = "gcc"
rustflags = [
  "-L/usr/lib/x86_64-linux-gnu", 
  "-L/usr/x86_64-linux-gnu/lib"
]
# PKG_CONFIG_LIBDIR=/usr/lib/x86_64-linux-gnu/pkgconfig
# PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
# OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu

[target.riscv32imc-esp-espidf]
linker = "ldproxy"
# runner = "espflash --monitor" # Select this runner for espflash v1.x.x
runner = "espflash flash --monitor" # Select this runner for espflash v2.x.x
rustflags = [
    "--cfg",
    "espidf_time64",
] # Extending time_t for ESP IDF 5: https://github.com/esp-rs/rust/issues/110

[unstable]
build-std = ["std", "panic_abort"]

[env]
MCU = "esp32c3"
# Note: this variable is not used by the pio builder (`cargo build --features pio`)
ESP_IDF_VERSION = "v5.1.3"

# Workaround for https://github.com/esp-rs/esp-idf-template/issues/174 until
# https://github.com/esp-rs/esp-idf-hal/pull/387 gets released and the template
# updated.
CRATE_CC_NO_DEFAULTS = "1"
