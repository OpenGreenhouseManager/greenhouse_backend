name: Continuous Integration

on:
  push:
    paths-ignore:
      - "**/README.md"
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  rust-checks-embedded:
    name: Rust Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        action:
          - command: sort
            args: --workspace --grouped 
          - command: build
            args: --release --workspace 
          - command: fmt
            args: --all -- --check --color always
          - command: clippy
            args: --all-targets --all-features --workspace  -- -D warnings
          - command: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: hadolint
        uses: jbergstroem/hadolint-gh-action@v1
        with:
          dockerfile: "**/Dockerfile"
          error_level: 2
      - name: rust up update 
        run: rustup update
      - name: rust up update nightly
        run: rustup update 
      - name: nightly
        run: rustup component add rust-src --toolchain 1.87.0-x86_64-unknown-linux-gnu
      - name: rustfmt
        run: rustup component add --toolchain 1.87.0-x86_64-unknown-linux-gnu rustfmt
      - name: clippy
        run: rustup component add --toolchain 1.87.0-x86_64-unknown-linux-gnu clippy
      - name: install ldproxy
        run: cargo install ldproxy
      - name: install cargo-sort
        run: cargo install cargo-sort
      - name: install typos
        run: cargo install typos-cli
      - name: typos
        run: typos
      - name: Run command
        run: cargo ${{ matrix.action.command }} ${{ matrix.action.args }}
